{
	"name": "blackboxagent",
	"displayName": "BLACKBOXAI Agent",
	"description": "Autonomous coding agent right in your IDE, capable of creating/editing files, running commands, using the browser, and more with your permission every step of the way.",
	"version": "3.4.86",
	"icon": "assets/icons/icon.png",
	"galleryBanner": {
		"color": "#100f11",
		"theme": "dark"
	},
	"engines": {
		"vscode": "^1.84.0"
	},
	"author": {
		"name": "blackbox"
	},
	"license": "",
	"publisher": "Blackboxapp",
	"repository": {
		"type": "git",
		"url": ""
	},
	"homepage": "https://www.blackbox.ai",
	"categories": [
		"AI",
		"Other",
		"Programming Languages",
		"Snippets",
		"Machine Learning",
		"Education"
	],
	"keywords": [
		"keybindings",
		"code-recommendation",
		"copilot",
		"chatgpt",
		"openai",
		"sonnet",
		"anthropic",
		"blackbox.ai",
		"codex",
		"co-pilot",
		"pilot",
		"autocomplete",
		"javascript",
		"python",
		"typescript",
		"php",
		"ruby",
		"java",
		"go",
		"golang",
		"bash",
		"kotlin",
		"html",
		"css",
		"ocaml",
		"perl",
		"rust",
		"julia",
		"lua",
		"haskell",
		"c",
		"cpp",
		"c++",
		"csharp",
		"c#",
		"react",
		"swift",
		"objective-c",
		"objectivec",
		"ai",
		"method completion",
		"intellicode",
		"intellisense",
		"snippets",
		"kite",
		"mcp",
		"nodejs",
		"node",
		"node.js",
		"jupyter",
		"robocoder",
		"cybercoder",
		"domination"
	],
	"activationEvents": [
		"onStartupFinished",
		"onInlineCompletionRequest"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "blackboxai-dev-ActivityBar",
					"title": "blackbox",
					"icon": "$(zap)"
				}
			]
		},
		"views": {
			"blackboxai-dev-ActivityBar": [
				{
					"type": "webview",
					"id": "blackboxai-dev.SidebarProvider",
					"name": ""
				}
			]
		},
		"commands": [
			{
				"command": "blackbox.copyFileContent",
				"title": "Copy File Content to Chat"
			},
			{
				"command": "blackbox.inputBoxButtonClicked",
				"title": "Promo Code"
			},
			{
				"command": "blackbox.contactSupport",
				"title": "Support"
			},
			{
				"command": "blackbox.enableChatModeClicked",
				"title": "Chat Mode",
				"icon": "$(comment-discussion)"
			},
			{
				"command": "blackbox.enableAgentModeClicked",
				"title": "Chat Mode",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "blackbox.popoutButtonClicked",
				"title": "Open in Editor",
				"icon": "$(link-external)"
			},
			{
				"command": "blackbox.settingsButtonClicked",
				"title": "Settings",
				"icon": "$(settings-gear)"
			},
			{
				"command": "blackbox.openInNewTab",
				"title": "Right Panel",
				"icon": "$(split-horizontal)"
			},
			{
				"command": "blackbox.groupChatButtonClicked",
				"title": "Messaging"
			},
			{
				"command": "blackbox.multiTaskButtonClicked",
				"title": "Multi-Task"
			},
			{
				"command": "blackbox.apiKeyButtonClicked",
				"title": "Api Key",
				"icon": "$(settings-gear)"
			},
			{
				"command": "blackbox.toggleInlineCompletion",
				"title": "Toggle Inline Completion",
				"category": "Blackbox"
			},
			{
				"command": "blackbox.plusButtonClicked",
				"title": "New Chat",
				"icon": "$(add)"
			},
			{
				"command": "blackbox.addCredits",
				"title": "Credits",
				"icon": "$(credit-card)"
			},
			{
				"command": "blackbox.moreOptions",
				"title": "More",
				"icon": "$(settings)"
			},
			{
				"command": "blackbox.openFromEditorToolbar",
				"title": "BLACKBOX"
			},
			{
				"command": "blackbox.toggleApiMode",
				"title": "API"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "blackbox.openBillingPortal",
					"group": "navigation@2.1",
					"when": "view == blackboxai-dev.SidebarProvider"
				},
				{
					"command": "blackbox.apiKeyButtonClicked",
					"group": "navigation@5",
					"when": "view == blackboxai-dev.SidebarProvider"
				},
				{
					"command": "blackbox.plusButtonClicked",
					"group": "navigation@1",
					"when": "view == blackboxai-dev.SidebarProvider"
				},
				{
					"command": "blackbox.addCredits",
					"group": "navigation@2",
					"when": "view == blackboxai-dev.SidebarProvider"
				},
				{
					"command": "blackbox.moreOptions",
					"group": "navigation@3",
					"when": "view == blackboxai-dev.SidebarProvider"
				},
				{
					"command": "blackbox.toggleApiMode",
					"group": "navigation@0",
					"when": "view == blackboxai-dev.SidebarProvider"
				}
			],
			"editor/title": [
				{
					"command": "blackbox.openFromEditorToolbar",
					"group": "navigation"
				}
			]
		},
		"configuration": {
			"title": "blackbox",
			"properties": {
				"blackbox.mcp.mode": {
					"type": "string",
					"enum": [
						"full",
						"server-use-only",
						"off"
					],
					"enumDescriptions": [
						"Enable all MCP functionality (server use and build instructions)",
						"Enable MCP server use only (excludes instructions about building MCP servers)",
						"Disable all MCP functionality"
					],
					"default": "full",
					"description": "Controls MCP inclusion in prompts, reduces token usage if you only need access to certain functionality."
				},
				"blackbox.mcpMarketplace.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Controls whether the MCP Marketplace is enabled."
				}
			}
		},
		"keybindings": [
			{
				"command": "blackbox.copyFileContent",
				"key": "ctrl+i",
				"mac": "cmd+i",
				"when": "editorTextFocus"
			}
		],
		"walkthroughs": [
			{
				"id": "BLACKBOXAIWalkthrough",
				"title": "Meet BLACKBOXAI, the Best AI Coding Agent",
				"description": "BLACKBOXAI codes like the Best Engineers. Here are 5 ways to put it to work:",
				"steps": [
					{
						"id": "welcome",
						"title": "Give it Tasks, Not Just a Prompts",
						"description": "Tell BLACKBOXAI what you want to achieve. It plans, asks, and then codes",
						"media": {
							"markdown": "walkthrough/step1.md"
						}
					},
					{
						"id": "learn",
						"title": "Let BLACKBOXAI Learn Your Codebase",
						"description": "Point BLACKBOXAI to your project. It builds understanding to make smart, context-aware changes.",
						"media": {
							"markdown": "walkthrough/step2.md"
						}
					},
					{
						"id": "advanced-features",
						"title": "Always Use the Best AI Models",
						"description": "BLACKBOXAI empowers you with State-of-the-Art AI, connecting to top models (Anthropic, Gemini, OpenAI & more).",
						"media": {
							"markdown": "walkthrough/step3.md"
						}
					},
					{
						"id": "mcp",
						"title": "Extend with Powerful Tools (MCP)",
						"description": "Connect to databases, APIs, or discover new capabilities in the MCP Marketplace.",
						"media": {
							"markdown": "walkthrough/step4.md"
						}
					},
					{
						"id": "getting-started",
						"title": "You're Always in Control",
						"description": "Review BLACKBOXAI's plans and diffs. Approve changes before they happen. No surprises.",
						"media": {
							"markdown": "walkthrough/step5.md"
						},
						"content": {
							"path": "walkthrough/step5.md"
						}
					}
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "npm run check-types && npm run lint && node esbuild.js",
		"watch": "npm-run-all -p watch:*",
		"watch:esbuild": "node esbuild.js --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"package": "npm run build:webview && npm run build:electron-audio && npm run check-types && npm run lint && node esbuild.js --production",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"check-types": "tsc --noEmit",
		"lint": "eslint src --ext ts",
		"test": "vscode-test",
		"install:all": "npm install && cd webview-ui && npm install && cd ../electron-audio && npm install",
		"start:webview": "cd webview-ui && npm run start",
		"build:webview": "cd webview-ui && npm run build",
		"test:webview": "cd webview-ui && npm run test",
		"start:electron-audio": "cd electron-audio && npm run start",
		"build:electron-audio": "cd electron-audio && npm run build",
		"test:electron-audio": "cd electron-audio && npm run test",
		"publish:marketplace": "vsce publish && ovsx publish",
		"build:all": "npm run install:all && npm run build:webview && npm run build:electron-audio && npm run compile",
		"postinstall": "cd electron-audio && npm install"
	},
	"devDependencies": {
		"@types/diff": "^5.2.1",
		"@types/ffprobe-static": "^2.0.3",
		"@types/globby": "^8.0.0",
		"@types/mocha": "^10.0.7",
		"@types/node": "20.x",
		"@types/react": "^18.3.3",
		"@types/react-dom": "^18.3.0",
		"@types/uuid": "^10.0.0",
		"@types/vscode": "^1.84.0",
		"@types/ws": "^8.5.13",
		"@typescript-eslint/eslint-plugin": "^7.14.1",
		"@typescript-eslint/parser": "^7.11.0",
		"@vscode/test-cli": "^0.0.9",
		"@vscode/test-electron": "^2.4.0",
		"esbuild": "^0.21.5",
		"eslint": "^8.57.0",
		"npm-run-all": "^4.1.5",
		"patch-package": "^8.0.0",
		"typescript": "^5.4.5"
	},
	"optionalDependencies": {
		"@livekit/rtc-node-darwin-arm64": "0.13.12",
		"@livekit/rtc-node-darwin-x64": "0.13.12",
		"@livekit/rtc-node-linux-arm64-gnu": "0.13.12",
		"@livekit/rtc-node-linux-x64-gnu": "0.13.12",
		"@livekit/rtc-node-win32-x64-msvc": "0.13.12"
	},
	"dependencies": {
		"@anthropic-ai/bedrock-sdk": "^0.10.2",
		"@anthropic-ai/sdk": "^0.26.0",
		"@anthropic-ai/vertex-sdk": "^0.4.1",
		"@google/generative-ai": "^0.18.0",
		"@livekit/components-react": "^2.9.3",
		"@livekit/rtc-node": "^0.13.12",
		"@mistralai/mistralai": "^1.5.0",
		"@modelcontextprotocol/sdk": "^1.0.4",
		"@types/clone-deep": "^4.0.4",
		"@types/pdf-parse": "^1.1.4",
		"@types/turndown": "^5.0.5",
		"@vscode/codicons": "^0.0.40",
		"7zip-min": "^2.1.0",
		"axios": "^1.7.4",
		"cheerio": "^1.0.0",
		"clone-deep": "^4.0.1",
		"default-shell": "^2.2.0",
		"delay": "^6.0.0",
		"diff": "^5.2.0",
		"execa": "^9.5.2",
		"extract-zip": "^2.0.1",
		"fast-deep-equal": "^3.1.3",
		"fluent-ffmpeg": "^2.1.3",
		"framer-motion": "^12.10.5",
		"globby": "^14.0.2",
		"isbinaryfile": "^5.0.2",
		"js-tiktoken": "^1.0.15",
		"livekit-client": "^2.11.4",
		"livekit-server-sdk": "^2.12.0",
		"mammoth": "^1.8.0",
		"monaco-vscode-textmate-theme-converter": "^0.1.7",
		"net": "^1.0.2",
		"openai": "^4.61.0",
		"os-name": "^6.0.0",
		"p-wait-for": "^5.0.2",
		"pdf-parse": "^1.1.1",
		"puppeteer-chromium-resolver": "^23.0.0",
		"puppeteer-core": "^23.4.0",
		"serialize-error": "^11.0.3",
		"socket.io-client": "^4.8.1",
		"strip-ansi": "^7.1.0",
		"stripe": "^17.6.0",
		"tree-sitter-wasms": "^0.1.11",
		"turndown": "^7.2.0",
		"uuid": "^11.0.3",
		"web-tree-sitter": "^0.22.6",
		"ws": "^8.18.0",
		"yauzl": "^3.2.0",
		"zod": "^3.25.76"
	},
	"__metadata": {
		"installedTimestamp": 1761102103566,
		"targetPlatform": "undefined",
		"size": 54028409
	}
}