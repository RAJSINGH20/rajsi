try{let a="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},b=(new a.Error).stack;b&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[b]="5c058696-cebd-44f9-8b7d-58ca97fb3a84",a._sentryDebugIdIdentifier="sentry-dbid-5c058696-cebd-44f9-8b7d-58ca97fb3a84")}catch(a){}"use strict";exports.id=7884,exports.ids=[5363,7884],exports.modules={3708:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{C0:()=>i,MP:()=>g,m6:()=>h});var e=c(43084),f=a([e]);e=(f.then?(await f)():f)[0];let g=async({messages:a,fromMarketplace:b,provider:c})=>{let d=await (0,e.So)(c);return b?a:a.slice(-d)},h=a=>{let b=new Map,c=1;return a.map(a=>{let d=function(a){return"string"!=typeof a?a:a.replace(/(!\[image]\((data:image\/[a-zA-Z]+;base64,[^)]+)\)|\S{128,})/g,(a,d)=>{if(!d)return a.replace(/(.{256})/g,"$1<wbr>");{let d=`#img-representation-${c++}`;return b.set(d,a),d}})}(a?.content||"");return{role:a.role,content:d}})},i=a=>a.map(a=>({role:a?.role,content:a?.content||"",...a?.tool_calls&&{tool_calls:a?.tool_calls},...a?.tool_call_id&&{tool_call_id:a?.tool_call_id}}));d()}catch(a){d(a)}})},6160:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{By:()=>m,Ht:()=>p,Mj:()=>k,Pr:()=>n,aJ:()=>r,iB:()=>o,po:()=>q,qP:()=>j});var e=c(944);c(7004);var f=c(43084),g=c(17332),h=c(36676),i=a([f,g]);[f,g]=i.then?(await i)():i;let s="mcpTools";async function j(){try{return g.s.getConfigFilePath()}catch(a){throw console.error("Error getting MCP config file path:",a),a}}async function k(){try{let a=await g.s.getConfigFilePath(),b=await g.s.loadConfig(),c=Object.entries(b.mcpServers);if(0===c.length)return{configFilePath:a,message:"No servers found",MCPServers:{}};let d=await (0,f.fm)(s)||[],e=[],h=0;for(let[a,b]of c)try{if(!b){g.s.setServerInfo(a,{tools:[],errorMessage:"No config found"});continue}let c=await g.s.connectToServer(a,b);if(!c.isValid)continue;h++;let f=await c.client.listTools(),i=[];for(let b of f.tools){let c=b.name,e=d.find(a=>a.name===c),f={name:c,description:b.description??"",parameters:b.inputSchema,isAvailable:!e||e.isAvailable,autoApprove:!!e&&e.autoApprove,serverName:a};i.push(f)}let j=g.s.getServerInfo(a);j&&(j.tools=i,j.errorMessage="",g.s.setServerInfo(a,j)),e.push(...i)}catch(b){console.error(`Error processing ${a}:`,b.message),g.s.setServerInfo(a,{tools:[],errorMessage:b.message})}return await l(e),{configFilePath:a,message:`${h} MCP servers found`,MCPServers:g.s.getSerializableMCPServers()}}catch(a){return console.error("Error connecting to MCP servers:",a),{configFilePath:"",message:"Error connecting to MCP servers",MCPServers:{}}}}async function l(a){try{let b=await (0,f.fm)(s)||[];JSON.stringify(a)!==JSON.stringify(b)&&await (0,f.ph)(s,a)}catch(a){throw console.error("Error updating MCP tools in storage:",a),a}}async function m(a){try{return await k(),g.s.getConnection(a)}catch(a){throw console.error("Error getting MCP connection:",a),a}}async function n(a=!1){try{await k();let b=g.s.getAllServers(),c={};for(let d in b){let e=b[d],f=g.s.getConnection(d);(!a||f&&f.isValid)&&(c[d]={tools:e.tools,errorMessage:e.errorMessage})}return c}catch(a){return console.error("Error listing MCP servers:",a),{}}}async function o(a=!1){try{await k();let b=g.s.getAllServers(),c=[];for(let a of Object.values(b))c.push(...a.tools);return a?c.filter(a=>a.isAvailable):c}catch(a){return console.error("Error listing MCP tools:",a),[]}}async function p({name:a,args:b}){try{await k();let b=g.s.getConnection(a);if(!b||!b.isValid)throw Error(`Not connected to server for tool ${a}`);return!1}catch(a){throw console.error("Error calling MCP tool:",a),a}}async function q({toolName:a}){try{let b=await (0,f.fm)(s)||[],c=b.findIndex(b=>b.name===a);if(-1===c)return!1;return b[c].isAvailable=!b[c].isAvailable,await (0,f.ph)(s,b),!0}catch(a){return console.error("Error updating tool availability:",a),!1}}async function r({toolName:a}){try{let b=await (0,f.fm)(s)||[],c=b.findIndex(b=>b.name===a);if(-1===c)return!1;return b[c].autoApprove=!b[c].autoApprove,await (0,f.ph)(s,b),!0}catch(a){return console.error("Error updating tool auto approve:",a),!1}}(0,h.D)([j,k,m,n,o,p,q,r]),(0,e.A)(j,"00ac7636233c4bb02de66b2c70f3894f43146ae5ed",null),(0,e.A)(k,"0007e0dd97250fbf09273432d7a7ecffbef1128c51",null),(0,e.A)(m,"405e42290aaefe312069697cfc18c8e3100a0b78b3",null),(0,e.A)(n,"4091ea8aaeadd46b13b742c5c8d4f0252b2d9fa65a",null),(0,e.A)(o,"4052b6d7a3a69ed4ecb4c86acb322169b13cfa81e6",null),(0,e.A)(p,"40da10572667cb7b2798df009eaeafa14ed0cd0fe2",null),(0,e.A)(q,"402a3e88b003da0d1d87e98e85bb175a1c1c9e6ba7",null),(0,e.A)(r,"40b07c26c5975a402993be6d2b3364a79f1e2d0043",null),d()}catch(a){d(a)}})},17332:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{s:()=>o});var e=c(43084),f=c(6088),g=c(47386),h=c(74378),i=c(29021),j=c(79748),k=c(21820),l=c(33873),m=a([e,f]);[e,f]=m.then?(await m)():m;class n{constructor(){this.connections={},this.MCPServers={},this.configFilePath=null}static getInstance(){return n.instance||(n.instance=new n),n.instance}async getConfigFilePath(){if(!this.configFilePath){let a=k.homedir(),b=l.join(a,".codegpt");this.configFilePath=l.join(b,"mcp_config.json")}return this.configFilePath}async loadConfig(){let a,b=await this.getConfigFilePath();if(!i.existsSync(b)){let a={mcpServers:{}};return i.writeFileSync(b,JSON.stringify(a,null,2)),a}let c=await (0,j.readFile)(b,"utf-8");try{a=JSON.parse(c)}catch{a={mcpServers:{}}}let d=Object.keys(this.MCPServers),e=Object.keys(a.mcpServers||{});for(let a of d.filter(a=>!e.includes(a)))await this.closeConnection(a),this.MCPServers=Object.fromEntries(Object.entries(this.MCPServers).filter(([b])=>b!==a)),this.connections=Object.fromEntries(Object.entries(this.connections).filter(([b])=>b!==a));return a}getServerInfo(a){return this.MCPServers[a]||null}getAllServers(){return{...this.MCPServers}}setServerInfo(a,b){this.MCPServers[a]=b}getSerializableMCPServers(){let a={};for(let[b,c]of Object.entries(this.MCPServers))a[b]={tools:c.tools,errorMessage:c.errorMessage};return a}async connectToServer(a,b){let c,d;if(this.connections[a]&&this.connections[a].isValid)return this.connections[a];let i=new g.K({name:"mcp-client-cli",version:"1.0.0"});try{let g=new h.oQ({...b});g.onerror=b=>{d=b.message,f.A.window.showErrorMessage(`Error connecting to ${a}: ${b.message}`),(0,e.Vn)("mcpConnection.ts error: "+b.message)};let j=async()=>Promise.race([i.connect(g),new Promise((a,b)=>{setTimeout(()=>b(Error("Connection timed out after 10s")),1e4)})]);await j(),c={client:i,transport:g,isValid:!0}}catch(b){console.error(`Error connecting to ${a}:`,b.message),c={client:i,transport:null,isValid:!1,errorMessage:d??b.message}}return this.connections[a]=c,this.MCPServers[a]?(this.MCPServers[a].connection=c,c.isValid||(this.MCPServers[a].errorMessage=c.errorMessage||"Connection failed")):this.MCPServers[a]={tools:[],errorMessage:c.isValid?"":c.errorMessage||"Connection failed",connection:c},c}getConnection(a){return this.connections[a]||null}async closeConnection(a){let b=this.connections[a];if(b?.transport)try{await b.transport.close(),b.isValid=!1,this.MCPServers[a]&&(this.MCPServers[a].errorMessage="Connection closed")}catch(b){console.error(`Error closing transport for ${a}:`,b)}}async closeAllConnections(){for(let a in this.connections)await this.closeConnection(a)}}let o=n.getInstance();d()}catch(a){d(a)}})},25363:(a,b,c)=>{c.d(b,{O:()=>f,prompts:()=>e});let d=!1,e={english:{explain:"Act as an experienced programming mentor. Analyze and explain the following code clearly and concisely, highlighting its main purpose, functionality, and key concepts used.",comment:"Act as a senior developer. Add concise and descriptive comments to each relevant section of the following code, explaining the purpose of each line or block where necessary. Keep comments brief and helpful.",fix:"Act as a senior software developer. Review and fix any issues in the following code. Provide only the corrected code and a brief list of changes. If no fixes are needed, respond with: 'No issues found to fix.'",document:"Act as an expert developer. Add standard code documentation (using the language's conventional format like docstrings, JSDoc, etc.) to the following code. Provide only the documented version of the code without additional explanations or markdown reports.",refactor:"Act as a senior software architect. Analyze and improve the following code by applying SOLID principles, design patterns, and best practices. Maintain the original functionality while optimizing its structure, readability, and maintainability.",unitTest:"Act as a software testing specialist. Create comprehensive unit tests for the following code, covering positive, negative, and edge cases. Use testing best practices and the language's standard testing framework.",debug:"Act as a debugging expert. Analyze the following code to identify and resolve any bugs or issues. Provide only the corrected code and a brief explanation of the debugging process."},spanish:{explain:"Act\xfaa como un mentor experimentado en programaci\xf3n. Analiza y explica el siguiente c\xf3digo de manera clara y concisa, destacando su prop\xf3sito principal, funcionalidad y los conceptos clave utilizados.",comment:"Act\xfaa como un desarrollador s\xe9nior. Agrega comentarios concisos y descriptivos a cada secci\xf3n relevante del siguiente c\xf3digo, explicando el prop\xf3sito de cada l\xednea o bloque donde sea necesario. Mant\xe9n los comentarios breves y \xfatiles.",fix:"Act\xfaa como un desarrollador s\xe9nior de software. Revisa y corrige cualquier problema en el siguiente c\xf3digo. Proporciona solo el c\xf3digo corregido y una breve lista de cambios. Si no se necesitan correcciones, responde con: 'No se encontraron problemas para corregir.'",document:"Act\xfaa como un desarrollador experto. Agrega documentaci\xf3n est\xe1ndar al c\xf3digo (usando el formato convencional del lenguaje como docstrings, JSDoc, etc.) al siguiente c\xf3digo. Proporciona solo la versi\xf3n documentada del c\xf3digo sin explicaciones adicionales o informes en markdown.",refactor:"Act\xfaa como un arquitecto de software s\xe9nior. Analiza y mejora el siguiente c\xf3digo aplicando los principios SOLID, patrones de dise\xf1o y mejores pr\xe1cticas. Mant\xe9n la funcionalidad original optimizando su estructura, legibilidad y mantenibilidad.",unitTest:"Act\xfaa como un especialista en pruebas de software. Crea pruebas unitarias completas para el siguiente c\xf3digo, cubriendo casos positivos, negativos y l\xedmites. Usa las mejores pr\xe1cticas de pruebas y el marco de pruebas est\xe1ndar del lenguaje.",debug:"Act\xfaa como un experto en depuraci\xf3n. Analiza el siguiente c\xf3digo para identificar y resolver cualquier error o problema. Proporciona solo el c\xf3digo corregido y una breve explicaci\xf3n del proceso de depuraci\xf3n."},portuguese:{explain:"Atue como um mentor experiente em programa\xe7\xe3o. Analise e explique o c\xf3digo a seguir de forma clara e concisa, destacando seu principal prop\xf3sito, funcionalidade e conceitos-chave utilizados.",comment:"Atue como um desenvolvedor s\xeanior. Adicione coment\xe1rios concisos e descritivos em cada se\xe7\xe3o relevante do c\xf3digo a seguir, explicando o prop\xf3sito de cada linha ou bloco onde necess\xe1rio. Mantenha os coment\xe1rios breves e \xfateis.",fix:"Atue como um desenvolvedor s\xeanior de software. Revise e corrija quaisquer problemas no c\xf3digo a seguir. Forne\xe7a apenas o c\xf3digo corrigido e uma breve lista de mudan\xe7as. Se n\xe3o houver corre\xe7\xf5es necess\xe1rias, responda com: 'Nenhum problema encontrado para corrigir.'",document:"Atue como um desenvolvedor especialista. Adicione documenta\xe7\xe3o padr\xe3o ao c\xf3digo (usando o formato convencional da linguagem, como docstrings, JSDoc, etc.) no c\xf3digo a seguir. Forne\xe7a apenas a vers\xe3o documentada do c\xf3digo, sem explica\xe7\xf5es adicionais ou relat\xf3rios em markdown.",refactor:"Atue como um arquiteto de software s\xeanior. Analise e melhore o c\xf3digo a seguir aplicando os princ\xedpios SOLID, padr\xf5es de design e melhores pr\xe1ticas. Mantenha a funcionalidade original enquanto otimiza sua estrutura, legibilidade e manutenibilidade.",unitTest:"Atue como um especialista em testes de software. Crie testes unit\xe1rios abrangentes para o c\xf3digo a seguir, cobrindo casos positivos, negativos e de borda. Use as melhores pr\xe1ticas de teste e o framework de teste padr\xe3o da linguagem.",debug:"Atue como um especialista em depura\xe7\xe3o. Analise o c\xf3digo a seguir para identificar e resolver quaisquer bugs ou problemas. Forne\xe7a apenas o c\xf3digo corrigido e uma breve explica\xe7\xe3o do processo de depura\xe7\xe3o."}},f=async({promptType:a,language:b})=>{if(!d){d=!0;try{let a=await fetch("https://storage.codegpt.co/vscode/prompts.json");a.ok&&(e=await a.json())}catch(a){console.error("Error fetching prompts from storage:",a)}}return e?.[b.toLowerCase()]?.[a]??e?.english?.[a]}},30076:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{aJ:()=>i});var e=c(43084),f=c(30539),g=a([e]);e=(g.then?(await g)():g)[0];let h=[{id:"chat",name:"Chat Mode",description:"Q&A Only (basic)",iconType:"chat",toolsConfig:{code_semantic_search:{isAvailable:!1,autoApprove:!1,displayName:"Code Search"},get_file_content:{isAvailable:!1,autoApprove:!1,displayName:"Read File"},get_folder_tree_structure:{isAvailable:!1,autoApprove:!1,displayName:"View Folder Structure"},create_file_or_folder:{isAvailable:!1,autoApprove:!1,displayName:"Create File/Folder"},delete_file:{isAvailable:!1,autoApprove:!1,displayName:"Delete File"},execute_terminal_command:{isAvailable:!1,autoApprove:!1,displayName:"Run Terminal Command"},edit_file:{isAvailable:!1,autoApprove:!1,displayName:"Edit File"},todo_list:{isAvailable:!1,autoApprove:!1,displayName:"Todo List"}}},{id:"search",name:"Search Mode",description:"Ask questions about your codebase",iconType:"search",toolsConfig:{code_semantic_search:{isAvailable:!0,autoApprove:!0,displayName:"Code Search"},get_file_content:{isAvailable:!0,autoApprove:!0,displayName:"Read File"},get_folder_tree_structure:{isAvailable:!0,autoApprove:!0,displayName:"View Folder Structure"},create_file_or_folder:{isAvailable:!1,autoApprove:!1,displayName:"Create File/Folder"},delete_file:{isAvailable:!1,autoApprove:!1,displayName:"Delete File"},execute_terminal_command:{isAvailable:!1,autoApprove:!1,displayName:"Run Terminal Command"},edit_file:{isAvailable:!1,autoApprove:!1,displayName:"Edit File"},todo_list:{isAvailable:!0,autoApprove:!0,displayName:"Todo List"}}},{id:"agent",name:"Agent Mode",description:"Search, edit, create, and more",iconType:"agent",toolsConfig:{code_semantic_search:{isAvailable:!0,autoApprove:!0,displayName:"Code Search"},get_file_content:{isAvailable:!0,autoApprove:!0,displayName:"Read File"},get_folder_tree_structure:{isAvailable:!0,autoApprove:!0,displayName:"View Folder Structure"},create_file_or_folder:{isAvailable:!0,autoApprove:!0,displayName:"Create File/Folder"},delete_file:{isAvailable:!0,autoApprove:!1,displayName:"Delete File"},execute_terminal_command:{isAvailable:!0,autoApprove:!1,displayName:"Run Terminal Command"},edit_file:{isAvailable:!0,autoApprove:!0,displayName:"Edit File"},todo_list:{isAvailable:!0,autoApprove:!0,displayName:"Todo List"}}}],i=[{name:"code_semantic_search",displayName:"Code Search",description:"Search your codebase semantically to find relevant code snippets",isAvailable:!0,autoApprove:!0},{name:"get_file_content",displayName:"Read File",description:"Retrieve the content of a specified file from your codebase",isAvailable:!0,autoApprove:!0},{name:"get_folder_tree_structure",displayName:"View Folder Structure",description:"Get the folder structure of your codebase to navigate through files",isAvailable:!0,autoApprove:!0},{name:"create_file_or_folder",displayName:"Create File/Folder",description:"Create a new file or folder in your codebase",isAvailable:!0,autoApprove:!0},{name:"delete_file",displayName:"Delete File",description:"Delete a file or folder in your codebase",isAvailable:!0,autoApprove:!0},{name:"execute_terminal_command",displayName:"Run Terminal Command",description:"Execute terminal commands in your development environment",isAvailable:!0,autoApprove:!1},{name:"edit_file",displayName:"Edit File",description:"Edit files by providing exact text replacements",isAvailable:!0,autoApprove:!0},{name:"todo_list",displayName:"Update Todo List",description:"Manage a TODO list for multi-step tasks - MUST start with this tool as first action for multiple steps, then use it again every time you complete a task to update progress",isAvailable:!0,autoApprove:!0}];(0,f.vt)()((a,b)=>({internalTools:i,selectedProfile:null,profileMetadata:null,isPlanningMode:!1,loadingTools:{},loadingAutoApprove:{},loadingProfile:!1,setInternalTools:b=>a({internalTools:b}),setSelectedProfile:b=>a({selectedProfile:b}),setProfileMetadata:b=>a({profileMetadata:b}),setPlanningMode:b=>a({isPlanningMode:b}),setLoadingTools:b=>a({loadingTools:b}),setLoadingAutoApprove:b=>a({loadingAutoApprove:b}),setLoadingProfile:b=>a({loadingProfile:b}),loadSavedSettings:async()=>{try{let c=await (0,e.fm)("internal-tools")||[],d=await (0,e.fm)("selected-profile"),f=localStorage.getItem("planning-mode");if(a({isPlanningMode:null!==f&&"true"===f}),c&&c.length>0){let b=i.map(a=>{let b=c.find(b=>b.name===a.name);return b?{...a,displayName:a.displayName,isAvailable:b.isAvailable,autoApprove:b.autoApprove}:a});a({internalTools:b}),await (0,e.ph)("internal-tools",b)}if(d&&d.id)a({selectedProfile:d.id,profileMetadata:d.metadata||null});else if(null===d&&c&&c.length>0)a({selectedProfile:null,profileMetadata:null}),b().getCurrentProfile();else if(!c||0===c.length){let a=h.find(a=>"agent"===a.id);a?await b().applyProfile(a):b().getCurrentProfile()}}catch(a){console.error("Error loading saved tool settings:",a)}},togglePlanningMode:async()=>{let{isPlanningMode:c}=b(),d=!c;a({isPlanningMode:d}),localStorage.setItem("planning-mode",String(d))},applyProfile:async c=>{let{internalTools:d}=b();a({loadingProfile:!0,selectedProfile:c.id,profileMetadata:c.metadata||null});try{let b=d.map(a=>{let b=c.toolsConfig[a.name];return b?{...a,isAvailable:b.isAvailable,autoApprove:b.autoApprove}:a});a({internalTools:b}),await (0,e.ph)("internal-tools",b),await (0,e.ph)("selected-profile",{id:c.id,metadata:c.metadata})}catch(a){console.error("Error applying profile:",a)}finally{a({loadingProfile:!1})}},updateToolAvailability:async c=>{let{internalTools:d,loadingTools:f}=b();a({loadingTools:{...f,[c.name]:!0},selectedProfile:null,profileMetadata:null});try{let b=d.map(a=>a.name===c.name?{...a,isAvailable:!a.isAvailable}:a);a({internalTools:b}),await (0,e.ph)("internal-tools",b),await (0,e.ph)("selected-profile",null)}catch(b){console.error("Error updating tool availability:",b),a({internalTools:d})}finally{let{loadingTools:d}=b();a({loadingTools:{...d,[c.name]:!1}})}},updateToolAutoApprove:async c=>{let{internalTools:d,loadingAutoApprove:f}=b();a({loadingAutoApprove:{...f,[c.name]:!0},selectedProfile:null,profileMetadata:null});try{let b=d.map(a=>a.name===c.name?{...a,autoApprove:!a.autoApprove}:a);a({internalTools:b}),await (0,e.ph)("internal-tools",b),await (0,e.ph)("selected-profile",null)}catch(b){console.error("Error updating tool auto-approve setting:",b),a({internalTools:d})}finally{let{loadingAutoApprove:d}=b();a({loadingAutoApprove:{...d,[c.name]:!1}})}},getCurrentProfile:()=>{let{internalTools:c}=b();for(let b of h)if(c.every(a=>{let c=b.toolsConfig[a.name];return!c||a.isAvailable===c.isAvailable&&a.autoApprove===c.autoApprove}))return a({selectedProfile:b.id,profileMetadata:b.metadata||null}),b.id;return a({selectedProfile:null,profileMetadata:null}),null}})),d()}catch(a){d(a)}})},35829:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{S:()=>j});var e=c(944);c(7004);var f=c(43084),g=c(76865),h=c(36676),i=a([f,g]);[f,g]=i.then?(await i)():i;let j=async({filePath:a,edits:b,messages:c})=>{let d=((a,b)=>{let c=a?.filter(a=>a?.tool_calls?.length>0&&a?.tool_calls[0]?.function?.name!=="todo_list")?.at(-1);if(!c)return{ok:!1,error:"No get_file_content tool call found. Please get the file content first."};let d=c.tool_calls[0]?.function;return d?.name!=="get_file_content"?{ok:!1,error:"No get_file_content tool call found. Please get the file content first."}:(()=>{try{return JSON.parse(d.arguments??"{}").path}catch(a){return}})()!==b?{ok:!1,error:"The last get_file_content call was made for a different file path."}:{ok:!0}})(c,a);if(!d.ok)return d;let e=await (0,g.Fd)(a),h=await (0,f._P)(e),i=h;for(let a of b)i=i.replace(a.old_string,a.new_string);return{ok:!0,normalizedPath:e,currentContent:h,newContent:i}};(0,h.D)([j]),(0,e.A)(j,"7f6f14bb53c09b24de367a5de0955494cec1aff34d",null),d()}catch(a){d(a)}})},37704:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{Uq:()=>k,cJ:()=>j,iG:()=>m,zD:()=>l});var e=c(944);c(7004);var f=c(43084),g=c(36676),h=a([f]);async function i(a,b){let c=await fetch(`${await (0,f.bm)()}${a}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(b)});if(!c.ok){let b=await c.text();throw Error(b||`Request to ${a} failed with status ${c.status}`)}return c.json().catch(()=>({}))}async function j({sessionId:a,filePath:b,initialContent:c}){return await i("/diffPreview/start",{sessionId:a,filePath:b,initialContent:c})}async function k({sessionId:a,content:b,isPartial:c=!1}){return await i("/diffPreview/stream",{sessionId:a,content:b,isPartial:c})}async function l({sessionId:a,finalContent:b=null}){return await i("/diffPreview/complete",{sessionId:a,finalContent:b})}async function m({sessionId:a}){return await i("/diffPreview/cancel",{sessionId:a})}f=(h.then?(await h)():h)[0],(0,g.D)([j,k,l,m]),(0,e.A)(j,"408ee23cd7792a4d9780945c29520734be11194ea2",null),(0,e.A)(k,"4087f67e1dfa778a0e8cae53e9f8c9610da2ff169f",null),(0,e.A)(l,"4058a057e50e322a1ab36d545fc2ae70b27de196e3",null),(0,e.A)(m,"40c4148268b5d3fdbe1bd914e3655b3c49ca81dab0",null),d()}catch(a){d(a)}})},54701:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{Ah:()=>r,Xu:()=>o,Zc:()=>p,eo:()=>u,ky:()=>s,sb:()=>n,sn:()=>q});var e=c(59627),f=c(43084),g=c(66609),h=c(30076),i=c(9298),j=c(6160),k=c(69342),l=c(76865),m=a([f,h,j,k,l]);function n(a,b){return new ReadableStream({async start(c){let d=a.getReader();async function e(){let{done:a,value:f}=await d.read();if(a)return void c.close();await new Promise(a=>setTimeout(a,b)),c.enqueue(f),await e()}await e()}})}function o(a){let b=a.body?.getReader();if(!b)throw Error("Response body is not readable");let c=new TextDecoder,d="";return new ReadableStream({async pull(a){for(;;){let{done:e,value:f}=await b.read();if(e){a.close();break}let g=c.decode(f,{stream:!0});try{let b=JSON.parse(g?.trim());a.enqueue({model:b?.model,error:b?.error,choices:[{delta:{content:b?.message?.content,role:b?.message?.role,tool_calls:b?.message?.tool_calls||b?.tool_calls,finishReason:b?.done_reason||b?.finish_reason},finish_reason:b?.done_reason||b?.finish_reason,finishReason:b?.done_reason||b?.finish_reason,tool_calls:b?.message?.tool_calls||b?.tool_calls}]})}catch(a){}for(let b of g.split("")){d+=b;try{if(d.endsWith("\n\n")){let b=d.slice(6,-2),c=JSON.parse(b);d="",a.enqueue(c)}}catch(b){if(b.message.includes("[DONE]")){a.close();break}}}}},cancel(){b.releaseLock()}})}[f,h,j,k,l]=m.then?(await m)():m;let p=a=>!(2===Object.keys(a).length&&"assistant"===a.role&&(!a.content||""===a.content.trim())&&!a.tool_calls),q=async(a,b)=>{let c=new ReadableStream({start(b){let c=new TextEncoder;for(let d of a){let a;a="string"==typeof d?c.encode(d):d instanceof ArrayBuffer?new Uint8Array(d):d,b.enqueue(a)}b.close()}});return new ReadableStream({async start(a){let d=c.getReader();for(;;){let{done:b,value:c}=await d.read();if(b)break;a.enqueue(c)}d.releaseLock();let e=b.getReader();for(;;){let{done:b,value:c}=await e.read();if(b)break;a.enqueue(c)}e.releaseLock(),a.close()}})},r=async(a,b)=>{let c=a.split(" ");return new ReadableStream({async start(a){let d=c.join("");for(let d of(b?.onStart?.(),c)){let c=new TextEncoder().encode(d+" ");a.enqueue(c),b?.onToken?.(d),await new Promise(a=>setTimeout(a,Math.floor(40*Math.random())+10))}b?.onFinal?.(d),b?.onCompletion?.(d),a.close()}})},s=(a,b,c)=>new ReadableStream({async start(d){await t(a,d,b,c),d.close()}}),t=async(a,b,c,d)=>{let e,f=a.getReader(),g={name:"",arguments:""},h=!0,i="";for(;;){let{done:a,value:j}=await f.read();if(a)break;try{let a=j?.choices?.[0]?.delta?.content;a&&(i+=a,b.enqueue(a));let f=j?.choices?.[0]?.delta?.function_call;if(f){if(h){h=!1;let a=`<p class="text-sm text-muted-foreground flex items-center gap-1">Searching on Stack Overflow...</p>

`;b.enqueue(a)}g.name+=f.name?`${f.name}`:"";let a=f?.arguments?f?.arguments:"";g.arguments+=a}if(e=j?.choices?.[0]?.finish_reason,"function_call"===e){let a;console.log({functionCall:g});try{a=await l.Cn[g.name]({functionCall:g,sendChunk:b.enqueue,roundTripStream:c,messages:d,internalTools:[],controller:b,allContent:i})}catch(a){console.log(a)}if(!1===a)return;(0,k.U)({eventName:"functionCall",functionName:g.name,provider:"CodeGPT Plus Beta"}),a&&""!==g.name||(a="function name is invalid or empty, try again with a valid function name.");let e=[...d,{role:"assistant",content:i||"",function_call:{name:g.name,arguments:JSON.stringify(g.arguments)}},{role:"function",name:g.name,content:a}];i||b.enqueue("\n");let f=await c({messages:e});return f.ok||console.log({status:f.status,text:await f.text()}),t(o(f),b,c,e)}}catch(a){}}f.releaseLock(),b.close()},u=({stream:a,roundTripStream:b,messages:c,sendChunk:d,resolve:e,controller:f,internalTools:g,requestId:h,interactionCount:i,todos:j})=>v({stream:a,sendChunk:d,roundTripStream:b,messages:c,controller:f,internalTools:g,requestId:h,interactionCount:i,todos:j}).then(()=>{e()}),v=async({stream:a,sendChunk:b,roundTripStream:c,messages:d,controller:m,internalTools:n,requestId:q,interactionCount:r,todos:s})=>{let t,u=a.getReader(),w=[],x="",y=crypto.randomUUID(),z=[],A=[],B=0,C=crypto.randomUUID(),D=!1,E=!1,F=!1,G=Array.isArray(s)?[...s]:[];for(;;){let{done:a,value:s}=await u.read();if(s?.error){await (0,f.Vn)("streams.tsx value?.error: "+JSON.stringify(s.error,null,2));try{if(B<1){B++,console.log(`Retrying after error. Attempt ${B}/1`),await new Promise(a=>setTimeout(a,1e3));let a=[...d,{role:"assistant",content:`Error occurred. ${JSON.stringify(s.error,null,2)}`,tool_calls:[]},{role:"system",content:"An error has occurred. Please ensure to conclude your interaction with the user appropriately."}];u.releaseLock();let e=await c({messages:a});if(!e.ok)return void console.log({status:e.status,text:await e.text()});if(r>i.xk)return;return await v({stream:o(e),sendChunk:b,roundTripStream:c,messages:d,controller:m,internalTools:n,requestId:q,interactionCount:r+1,todos:G})}console.log("Error persisted after retry:",s.error),b({content:"Error occurred. Please try again.",display:"RetryButton"});continue}catch(a){console.log("Error during retry handling:",a);continue}}let H=s?.metadata?.chunks,I=s?.metadata?.relationships,J=s?.metadata?.nodesFound;if(I||H||J){I&&(z=[...z,...I]),H&&(A=[...A,...H]),J&&J?.forEach(a=>{z.push({source:a.id,sourceType:a.type,sourceLabel:a.label,target:a.id,targetType:a.type,targetLabel:a.label})});let a=z.filter((a,b,c)=>b===c.findIndex(b=>b.source===a.source&&b.target===a.target)),c=A.filter((a,b,c)=>b===c.findIndex(b=>b.similarity===a.similarity));m.enqueue({content:" ",display:(0,e.jsx)("div",{id:C,children:" "})}),b({content:"",display:"ChunksCard",props:{graph:a,chunks:c},id:y})}if(a&&!D)break;try{let u=s?.choices?.[0]?.delta?.contents?.[0],y=u?.type==="think"?u?.content:"",z=s?.choices?.[0]?.delta?.content||"";y&&(F||(b({content:"<think>",display:"fragment"}),F=!0,E=!0),b({content:y,display:"fragment"}),x+=y),z&&(E&&(b({content:"</think> \n",display:"fragment"}),x+="</think> \n",E=!1),b({content:z,display:"fragment"}),x+=z);let A=s?.choices?.[0]?.delta?.tool_calls;if(A&&A?.forEach(a=>{let b=a.index||0;if(w[b]||(w[b]={name:"",arguments:"",id:""}),w[b].name+=a?.function?.name||"",a?.function?.name){let b=a?.function?.name||"",c=h.aJ.find(a=>a.name===b),d=c?.displayName||b;console.log({fnNameId:C,fnName:b,displayName:d}),m.enqueue({content:" ",display:(0,e.jsx)("div",{id:C,children:(0,e.jsx)(g.LLMToolRequestSkeleton,{title:d})})})}w[b].arguments="string"==typeof a?.function?.arguments?w[b].arguments+(a?.function?.arguments||""):JSON.stringify(a?.function?.arguments)||"",w[b].id+=a?.id||""}),(t=s?.choices?.[0]?.finish_reason||t)&&(("tool_calls"===t||"stop"===t&&w.length>0)&&(D=!0),(0,f.Vn)(`finishReason: ${t}`)),D&&a){(0,f.Vn)(JSON.stringify(w,null,2)),(w=(w=w.filter(a=>a.name)).map(a=>({name:a.name,arguments:a.arguments?a.arguments:"{}",id:a.id}))).length=1,w.forEach(a=>{if("todo_list"===a.name)try{let b=JSON.parse(a.arguments||"{}");Array.isArray(b?.todos)&&(G=b.todos)}catch(a){console.warn("Failed to parse todo_list arguments",a)}});let e=await Promise.all(w.map(async e=>{console.log({toolCall:e});let g=Object.keys(l.Cn).some(a=>a===e.name),h=!1;try{h=(await (0,j.iB)()).some(a=>a.name===e.name)}catch(a){console.error("Error checking MCP tools:",a)}let k=g||h;try{if(g)return{result:await l.Cn[e.name]({functionCall:e,sendChunk:b,roundTripStream:c,internalTools:n,messages:d,controller:m,allContent:x,requestId:q,fnNameId:C,interactionCount:r}),toolCall:e};if(!h)return(0,f.Vn)(`${e.name} not found`),{result:`Error: ${e.name} is not a valid function`,toolCall:e};{let c=await (0,j.iB)(),f=c.find(a=>a.name===e.name)?.autoApprove||!1,g=f;q&&f&&(g=(r??0)<i.xk),m.enqueue({toolRequest:{role:"assistant",content:x,tool_calls:[{id:e.id,type:"function",function:{name:e.name,arguments:e.arguments}}]}}),b({content:" ",display:"LLMToolRequest",props:{name:e.name,args:JSON.parse(e.arguments),messageIndex:d.length,autoApprove:g,toolCallId:e.id,interactionCount:r,requestId:q},...C&&{id:C}}),a&&t&&b({finishReason:t});return{result:!1,toolCall:e}}}catch(b){let a=k?`${b}`:`Error: ${e.name} is not a valid function`;return console.error(`Error executing ${e.name}:`,a),(0,f.Vn)(`Error executing ${e.name}: ${JSON.stringify(b,null,2)} ${b?.message||""}`),{result:a,toolCall:e}}}));console.log({functionResults:e});let g=e.filter(a=>null!=a);if(0===g.length||g.every(({result:a})=>!1===a||void 0===a)){g?.forEach(({toolCall:a})=>{(0,k.U)({eventName:"functionCall",functionName:a.name,provider:"CodeGPT Plus Beta"})}),t&&b({finishReason:t});break}g.filter(({result:a})=>!1!==a&&void 0!==a)?.forEach(({toolCall:a})=>{(0,k.U)({eventName:"functionCall",functionName:a.name,provider:"CodeGPT Plus Beta"}),m.enqueue({toolRequest:{role:"assistant",content:x,tool_calls:w.filter(a=>a.id).map(a=>({id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}))},toolResponse:[...g.filter(({result:a})=>!1!==a).map(({result:a,toolCall:b})=>({role:"tool",tool_call_id:b.id,content:a}))]})});let h=[...d,{role:"assistant",content:x,tool_calls:w.filter(a=>a.id).map(a=>({id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}))},...g.filter(({result:a})=>!1!==a).map(({result:a,toolCall:b})=>({role:"tool",tool_call_id:b.id,content:a}))].filter(p);await new Promise(a=>setTimeout(a,2e3));let s=await c({messages:h});if(console.log({responseOk:s.ok}),!s.ok)return void console.log({status:s.status,text:await s.text()});return await v({stream:o(s),sendChunk:b,roundTripStream:c,messages:h,controller:m,internalTools:n,requestId:q,interactionCount:r+1,todos:G})}if(a)break;if("content_filter"===t){b({content:"content_filtered",display:"fragment"});break}}catch(a){console.log({e:a,json:s})}}if(G.length>0&&G.some(a=>!a.done)&&r<i.xk&&!D){console.log("\x1b[33m%s\x1b[0m","Stream ended with incomplete TODO list, triggering continuation");let a=G.filter(a=>!a.done),e=[...d,{role:"assistant",content:x||"I need to continue with the remaining tasks."},{role:"user",content:`*Continue in auto approve mode until you complete all tasks* You finished your response without completing all tasks. You still have ${a.length} incomplete tasks in your TODO list.
Please continue by first updating the todo_list to show current progress, then complete the remaining tasks. Or change the status to done true if you already completed the task.
If you can't complete the tasks, please try another different way to complete the tasks (at least 3 times) if you can't just put all in done.
Example: If you can't complete the task "edit the file" because you don't know where the file is, you can try to find the file in the project directory with different tools.
`}].filter(p);console.log({newMessages:e});let f=await c({messages:e});if(f.ok)return u.releaseLock(),await v({stream:o(f),sendChunk:b,roundTripStream:c,messages:e,controller:m,internalTools:n,requestId:q,interactionCount:r+1,todos:G});{let a=await f.text();console.log({error:!0,text:a})}}t&&b({finishReason:t}),u.releaseLock()};d()}catch(a){d(a)}})},59723:(a,b,c)=>{c.d(b,{w:()=>g});var d=c(6378);let e="https://auth.codegpt.co",f="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJyb3h1dnNyc2RieGFjb2twcmF1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTU0OTEyNzgsImV4cCI6MjAxMTA2NzI3OH0.fyyxVq2c2eLIExMQEUxP8wNoyY2UumBrfN5So16TCno";(0,d.createBrowserClient)(e,f);let g=a=>(0,d.createServerClient)(e,f,{cookies:{get:b=>a.get(b)?.value,set(b,c,d){try{a.set({name:b,value:c,...d})}catch(a){}},remove(b,c){try{a.set({name:b,value:"",...c})}catch(a){}}}})},62262:(a,b,c)=>{c.d(b,{A:()=>f,k:()=>g});var d=c(3999);let e=()=>{let a=["Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36"],b=Math.floor(Math.random()*a.length);return a[b]},f=async a=>{let b=encodeURI(a);console.log(b);let c=e(),f={"User-Agent":`${c}`},g=`https://api.stackexchange.com/2.3/search/advanced?order=desc&sort=activity&q=${b}&site=stackoverflow`;return(await (0,d.A)(g,{headers:f}).then(function({data:a}){let b=[],c=a.items;for(let a=0;a<c.length;a++)b.push({label:c[a].title,detail:c[a].tags.join(", "),link:"https://stackoverflow.com/questions/"+c[a].question_id});return b})).slice(0,5)},g=async a=>{let b,c=e(),f={"User-Agent":`${c}`};return await (0,d.A)(a,{headers:f}).then(a=>{console.log(b)}),b}},62503:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{x:()=>m});var e=c(944);c(7004);var f=c(827),g=c(13234),h=c(59723),i=c(31921),j=c(43084),k=c(36676),l=a([f,g,j]);[f,g,j]=l.then?(await l)():l;let m=async({accessToken:a,refreshToken:b,expiresAt:c})=>{let d,e;console.log("SET VICUNA SESSION"),a||b||c||(0,h.w)(await (0,i.UL)()).auth.signOut({scope:"local"}).catch(a=>console.log(a));let k=a||g.FI.getByProvider("CodeGPT Plus Beta")?.apikey,l=await (0,f.y)();try{d=await fetch(`${l}/me`,{method:"GET",cache:"no-store",...k?{headers:{Authorization:`Bearer ${k}`}}:{}})}catch(a){console.error("Error fetching user data from CodeGPT API:",a);return}if(!d.ok){try{let a=await d.text();(0,j.Vn)(a)}catch(a){console.error("Error reading response text:",a)}return}try{e=await d.json()}catch(a){console.error("Error parsing JSON response from CodeGPT API:",a);return}let m=e?.user?.distinct_id,n=e?.signedDistinctId;try{g.jM.upsert({access_token:a,refresh_token:b,expires_at:Number(c),signed_distinct_id:n,distinct_id:m})}catch(a){console.error("Error upserting CodeGPT session data:",a)}};(0,k.D)([m]),(0,e.A)(m,"7ffc1a31852de6a4f19730d411251fb08eb39f60c6",null),d()}catch(a){d(a)}})},66609:(a,b,c)=>{c.d(b,{LLMToolRequestSkeleton:()=>d});let d=(0,c(27883).registerClientReference)(function(){throw Error("Attempted to call LLMToolRequestSkeleton() from the server but LLMToolRequestSkeleton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"/home/jeanpdev/dev/codegpt-nextjs/app/components/llm-tool-request-skeleton.tsx","LLMToolRequestSkeleton")},69342:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{B:()=>r,U:()=>q});var e=c(944);c(7004);var f=c(43084),g=c(70377),h=c(827),i=c(13234),j=c(39040),k=c(6088),l=c(3999),m=c(36676),n=a([f,g,h,i,k]);[f,g,h,i,k]=n.then?(await n)():n;let p=!1,q=async({eventName:a,groupBy:b,provider:c,model:d,promptTokens:e,completionTokens:g,totalTokens:h,target:l,value:m,statusCode:n,object:q,message:r,code_language:s,functionName:t,codeLinesNumber:u,flowVersion:v})=>{if("ads"===a)return null;let w=async()=>{let p=!i.jM.get()?.access_token,w=i.jM.get()?.signed_distinct_id,x=i.jM.get()?.distinct_id,y=await (0,f.fm)("anonymousDistinctId");if(console.log({userId:x,anonymousDistinctId:y}),!x&&!y)throw console.log({userId:x,anonymousDistinctId:y}),Error("No userId or anonymousDistinctId found");let[z,A,B]=await Promise.all([k.A.getIdeLanguage(),k.A.getVersion(),d?k.A.getLanguage():""]),C={userType:p?"anonymous":"registered",...c?{provider:c}:{},...d?{model:d}:{},...e?{prompt_tokens:e}:{},...g?{completion_tokens:g}:{},...h?{total_tokens:h}:{},...l?{target:l}:{},...b?{groupBy:b}:{},...m?{value:m}:{},...q?{object:q}:{},...r?{message:r}:{},...B?{language_code:B}:{},...s?{code_language:s}:{},...t?{function_name:t}:{},...u?{codeLinesNumber:u}:{},...v?{flow_version:v}:{},language:z,source:j.B2,codeGPTVersion:A};o({event:a||"Chat",data:{...C,...n?{statusCode:n}:{}},userId:x||y||"",signedDistinctId:w||""})};if("PreSignUp_SignUp"!==a||p)setTimeout(w,5e3);else{p=!0;let a=Math.floor(4501*Math.random())+500;await new Promise(b=>setTimeout(b,a)),await w()}return null};async function o({event:a,data:b,userId:c,signedDistinctId:d}){let e=[{event:a,properties:{...b,time:Date.now(),distinct_id:c,$insert_id:crypto.randomUUID()}}],f=await (0,g.A)(),i=await (0,h.y)();return l.A.post(`${i}/telemetry`,e,{headers:{"Content-Type":"application/json",...f?{Authorization:`Bearer ${f}`}:{},...d?{"X-Signed-Distinct-Id":d}:{}}}).catch(a=>{console.error("Error sending telemetry",a)}),null}let r=async({agentId:a})=>{let b=await (0,g.A)(),c=await (0,h.y)();return fetch(`${c}/logs/new-chat-metrics`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${b}`},body:JSON.stringify({agentId:a,source:j.B2.toUpperCase()})}),null};(0,m.D)([q,r]),(0,e.A)(q,"7f309fdf380403d4df8bf82c6c9b232f2f7f1a7363",null),(0,e.A)(r,"7f98282c077ad820fa286e285fd73d5b003c541493",null),d()}catch(a){d(a)}})},70377:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{A:()=>k});var e=c(43084),f=c(62503),g=c(13234),h=c(59723),i=c(31921),j=a([e,f,g]);async function k(){try{let a=await (0,e.fm)("codegpt-enterprise-config");if(a?.apiKey)return a.apiKey}catch(a){console.error("Error loading enterprise configuration:",a)}let a=g.jM.get(),b=a?.access_token;if(b&&parseInt(a?.expires_at+"000")<Date.now()){let c=(0,h.w)(await (0,i.UL)()),{data:d,error:e}=await c.auth.refreshSession({refresh_token:a?.refresh_token});e?(console.log("vicu\xf1a refreshSession error: ",e.message),(e.message.includes("Refresh Token Not Found")||e.message.includes("Already Used"))&&await (0,f.x)({accessToken:"",refreshToken:"",expiresAt:""})):(await (0,f.x)({accessToken:d.session.access_token,refreshToken:d.session.refresh_token,expiresAt:String(d.session.expires_at)}),b=d.session.access_token)}return b||void 0}[e,f,g]=j.then?(await j)():j,d()}catch(a){d(a)}})},76865:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{Cn:()=>s,Fd:()=>o,Jl:()=>r});var e=c(59627),f=c(43084),g=c(70377),h=c(9298),i=c(827),j=c(62262),k=c(77598),l=c(37704),m=c(35829),n=a([f,g,i,l,m]);[f,g,i,l,m]=n.then?(await n)():n;let q=[{type:"function",function:{name:"codeInterpreter",description:`Executes the given code and returns the result.
        *Use print() to return the result to the user.*`,parameters:{type:"object",properties:{code:{type:"string",description:"The Python code to execute in the notebook."}},required:["code"]}}},{type:"function",function:{name:"fetchUrl",description:"Fetches the given URL and returns the response.",parameters:{type:"object",properties:{url:{type:"string",description:"The URL to fetch."}},required:["url"]}}},{type:"function",function:{name:"searchEngine",description:"Searches the given query on the DuckDuckGo search engine and returns the results.",parameters:{type:"object",properties:{query:{type:"string",description:"The query to search."}},required:["query"]}}},{type:"function",function:{name:"searchStackOverflow",description:"Search in StackOverflow in english to find the infomation you need to answer the user's question.",parameters:{type:"object",properties:{query:{type:"string",description:"The query to search."}},required:["query"]}}},{type:"function",function:{name:"queryGithubIssues",description:"Searches the given query on the Github issues and returns the results.",parameters:{type:"object",properties:{query:{type:"string",description:"The query to search."},owner:{type:"string",description:"The owner of the repository."},repo:{type:"string",description:"The repository name."}},required:["query","owner","repo"]}}},{type:"function",function:{name:"fetchIssuesComments",description:`Fetches the given URL and returns the issue thread.
        Use this function to get the comments of an issue and give to user a complete response.`,parameters:{type:"object",properties:{owner:{type:"string",description:"The owner of the repository."},repo:{type:"string",description:"The repository name."},number:{type:"string",description:"The issue number."}},required:["owner","repo","number"]}}},{type:"function",function:{name:"getWorkspaceTree",description:"Use this functions before generateFilesAndFolders to get the user's workspace tree and generate the files and folders list with the correct path."}},{type:"function",function:{name:"generateFilesAndFolders",description:"Generates a list of files and folders based on the user's request. It returns the full path of the files\n Only use this function if the user has already asked for creeating files or the workspace tree.",parameters:{type:"object",properties:{filePaths:{type:"array",items:{type:"string",description:"The path of the file from the root of the project."}},nextSteps:{type:"string",description:"The next steps to execute."}},required:["filePaths","nextSteps"]}}},{type:"function",function:{name:"getPlanningAgents",description:"Get available agents to help you with your planning."}},{type:"function",function:{name:"executePlanningSteps",description:"Execute the planning steps and return the result.",parameters:{type:"object",properties:{planningSteps:{type:"array",items:{type:"object",properties:{step:{type:"string",description:"The step to execute."},agentName:{type:"string",description:"The agent name that will execute the step."},agentId:{type:"string",description:"The agent id that will execute the step."}},required:["step","agentName","agentId"]}},instructions:{type:"string",description:"Provide a detailed plan for each step to be executed."}},required:["planningSteps","instructions"]}}},{type:"function",function:{name:"createFile",description:`Creates a new file or folder.
    This function will also create any necessary directories in the path if they don't exist.`,parameters:{type:"object",properties:{path:{type:"string",description:"The path of the file or folder to create."},type:{type:"string",description:'The type of item to create. Can be "file" or "folder".',enum:["file","folder"]},content:{type:"string",description:'The content of the file to create (only required when type is "file").'}},required:["path","type"]}}},{type:"function",function:{name:"deleteFile",description:"Deletes a file or folder.",parameters:{type:"object",properties:{path:{type:"string",description:"The path of the file or folder to delete."}},required:["path"]}}},{type:"function",function:{name:"edit_file",description:"Edit a file by providing exact text replacements. Use this tool to make precise changes to files by specifying the exact text to replace and the new text.",parameters:{type:"object",properties:{filePath:{type:"string",description:"The path of the file to edit."},edits:{type:"array",description:"Array of edit operations to perform on the file",items:{type:"object",properties:{old_string:{type:"string",description:"The exact text to replace in the file (must match exactly including whitespace)"},new_string:{type:"string",description:"The new text to replace the old_string with"}},required:["old_string","new_string"]}},previewSessionId:{type:"string",description:"Internal use: identifier for the diff preview session if one is active."}},required:["filePath","edits"]}}},{type:"function",function:{name:"todo_list",description:`Manage a TODO list for multi-step tasks. You MUST start by using this tool as your first action when you need to perform multiple steps. Then, you MUST use this tool again every time you complete a task to update the list and show progress. Always rewrite the entire TODO list with updated completion status. IMPORTANT: Proceed automatically through all steps without waiting for user confirmation - complete the entire task autonomously.
      
Example: User asks "add error handling to the login function"
First use todo_list with:
[
  { task: "Search for login function in the project", done: false },
  { task: "Read the file containing the login function", done: false },
  { task: "Add error handling to the login function", done: false },
  { task: "Respond to user with the changes made", done: false }
]
Then update after each step is completed, proceeding automatically to the next step.`,parameters:{type:"object",properties:{todos:{type:"array",description:"Array of tasks with their completion status",items:{type:"object",properties:{task:{type:"string",description:"Description of the task to be performed"},done:{type:"boolean",description:"Whether the task has been completed"}},required:["task","done"]}}},required:["todos"]}}}].map(a=>a.function),r=a=>q.filter(b=>a.includes(b.name));async function o(a){let b=await (0,f.ju)(),c=await fetch(`http://localhost:${b}/rootPath`).then(a=>a.text()),d=a.replace(/\\/g,"/"),e=c.replace(/\\/g,"/");if("."===d||"./"===d||d===e)return"/";if(d.startsWith("./"))return d.slice(2);if(d.toLowerCase().startsWith(e.toLowerCase())){let a=d.slice(e.length);return a.replace(/^\/+/,"")?"/"+a.replace(/^\/+/,""):"/"}if(!d.match(/^[A-Za-z]:/)){let a=d.startsWith("/")&&"/"!==d?d.slice(1):d;return console.log("[normalizePath] Returning (no drive letter):",a),a}return console.log("[normalizePath] Returning (with drive letter):",d),d}function p(a,b,c,d){let e=b.filter(b=>void 0===a[b]||null===a[b]);if(e.length>0){let b=Object.entries(a).map(([a,b])=>`${a}: ${void 0===b?"undefined":null===b?"null":"string"==typeof b?`"${b}"`:JSON.stringify(b)}`).join(", ");return`Missing required arguments for ${c}. Undefined arguments: [${e.join(", ")}]. Received arguments: {${b||"none"}}`}return null}let s={execute_terminal_command:async({functionCall:a,sendChunk:b,internalTools:c,messages:d,controller:e,allContent:f,requestId:g,fnNameId:i,interactionCount:j})=>{let k=JSON.parse(a.arguments),{command:l,name:m}=k,n=p(k,["command"],"execute_terminal_command",a.arguments);if(n)return n;let o=c.find(a=>"execute_terminal_command"===a.name)?.autoApprove&&(j??0)<h.xk;return e.enqueue({toolRequest:{role:"assistant",content:f,tool_calls:[{id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}]}}),await new Promise(a=>setTimeout(a,1e3)),b({content:" ",display:"TerminalExecutor",props:{initialCommand:l,name:`${m} - ${a.id}`,messageIndex:d.length,autoApprove:o,toolCallId:a.id,requestId:g,interactionCount:j},...i?{id:i}:{}}),!1},code_semantic_search:async({functionCall:a,sendChunk:b,internalTools:c,messages:d,controller:f,allContent:g,requestId:i,fnNameId:j,interactionCount:k})=>{let l=JSON.parse(a.arguments),{query:m,path:n}=l,o=p(l,["query"],"code_semantic_search",a.arguments);if(f.enqueue({content:" ",display:(0,e.jsx)("div",{id:j,style:{display:"none"}})}),o)return o;let q=c.find(a=>"code_semantic_search"===a.name)?.autoApprove&&(k??0)<h.xk;return f.enqueue({toolRequest:{role:"assistant",content:g,tool_calls:[{id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}]}}),await new Promise(a=>setTimeout(a,1e3)),b({content:" ",display:"LLMToolRequest",props:{name:"code_semantic_search",args:{query:m,path:n},toolCallId:a.id,messageIndex:d.length,autoApprove:q,internal:!0,requestId:i,interactionCount:k},...j?{id:j}:{}}),!1},get_file_content:async({functionCall:a,sendChunk:b,internalTools:c,messages:d,controller:f,allContent:g,requestId:i,fnNameId:j,interactionCount:k})=>{let l=JSON.parse(a.arguments),{path:m}=l,n=p(l,["path"],"get_file_content",a.arguments);if(f.enqueue({content:" ",display:(0,e.jsx)("div",{id:j,style:{display:"none"}})}),n)return n;let o=c.find(a=>"get_file_content"===a.name)?.autoApprove&&(k??0)<h.xk;return f.enqueue({toolRequest:{role:"assistant",content:g,tool_calls:[{id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}]}}),await new Promise(a=>setTimeout(a,1e3)),console.log({fnNameId:j}),b({content:" ",display:"LLMToolRequest",props:{name:"get_file_content",args:{path:m},toolCallId:a.id,messageIndex:d.length,autoApprove:o,internal:!0,requestId:i,interactionCount:k},...j?{id:j}:{}}),!1},get_folder_tree_structure:async({functionCall:a,sendChunk:b,internalTools:c,messages:d,controller:f,allContent:g,requestId:i,fnNameId:j,interactionCount:k})=>{let l=JSON.parse(a.arguments),{path:m}=l,n=p(l,["path"],"get_folder_tree_structure",a.arguments);if(f.enqueue({content:" ",display:(0,e.jsx)("div",{id:j,style:{display:"none"}})}),n)return n;let o=c.find(a=>"get_folder_tree_structure"===a.name)?.autoApprove&&(k??0)<h.xk;return f.enqueue({toolRequest:{role:"assistant",content:g,tool_calls:[{id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}]}}),await new Promise(a=>setTimeout(a,1e3)),b({content:" ",display:"LLMToolRequest",props:{name:"get_folder_tree_structure",args:{path:m},toolCallId:a.id,messageIndex:d.length,autoApprove:o,internal:!0,requestId:i,interactionCount:k},...j?{id:j}:{}}),!1},codeInterpreter:async({functionCall:a,sendChunk:b,fnNameId:c,controller:d})=>{let f=JSON.parse(a.arguments),{code:h}=f,j=p(f,["code"],"codeInterpreter",a.arguments);if(d.enqueue({content:" ",display:(0,e.jsx)("div",{id:c,style:{display:"none"}})}),j)return j;let k=crypto.randomUUID();b({content:"```python\n"+h+"\n```",display:"CodeBlock",props:{language:"python",value:h,isRunning:!0},id:k});let l=await (0,g.A)(),m=await (0,i.y)(),n=await fetch(`${m}/code-interpreter`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${l}`},body:JSON.stringify({code:h})}),o=await n.json();b({content:"",id:k}),console.log({json:o});let q=o?.results?.[0]?.png||o?.results?.[0]?.svg||o?.results?.[0]?.jpeg;if(q)return b({content:"```python\n"+h+"\n```",display:"CodeBlock",props:{language:"python",value:h},id:k}),b({content:`The image with the users code was generated by the code execution of the following code:

${h}

 [![image](data:image/png;base64,...)]`,display:"img",props:{src:`data:image/png;base64,${q}`,alt:"image"},...c?{id:c}:{}}),!1;let r={result:{...o.text?{text:o.text}:{},...o.error?{error:o.error}:{},...o.logs?{logs:o.logs}:{}}},s=o.text?o.text:o.error?o.error:o.logs?o.logs.stdout.join("\n"):"";return b({content:"```python\n"+h+"\n```",display:"CodeBlock",props:{language:"python",value:h},id:k}),s&&b({content:JSON.stringify(r,null,2),display:"CodeBlock",props:{language:"Result",value:s},...c?{id:c}:{}}),`the code executed successfully, the result is: ${s}
    don't show the code to the user, just finalize the response.`},queryGithubIssues:async({functionCall:a,controller:b,fnNameId:c})=>{let d=JSON.parse(a.arguments),{query:f,owner:g,repo:h}=d,i=p(d,["query","owner","repo"],"queryGithubIssues",a.arguments);if(b.enqueue({content:" ",display:(0,e.jsx)("div",{id:c,style:{display:"none"}})}),i)return i;let j=await fetch(`https://api.github.com/search/issues?q=is:issue+repo:${g}/${h}+${f}&per_page=10`),k=(await j.json()).items.map(a=>({title:a.title,url:a.html_url,created_at:a.created_at,updated_at:a.updated_at,user:a.user.login,comments:a.comments,comments_url:a.comments_url,labels:a.labels.map(a=>({name:a.name,description:a.description})),body:a.body}));return console.log(k),JSON.stringify(k)+"\nNow use the `fetchIssuesComments` function to get the comments of an issue and give to user a complete response."},fetchIssuesComments:async({functionCall:a,controller:b,fnNameId:c})=>{let d=JSON.parse(a.arguments),{owner:f,repo:g,number:h}=d,i=p(d,["owner","repo","number"],"fetchIssuesComments",a.arguments);if(b.enqueue({content:" ",display:(0,e.jsx)("div",{id:c,style:{display:"none"}})}),i)return i;let j=await fetch(`https://api.github.com/repos/${f}/${g}/issues/${h}/comments`),k=(await j.json()).map(a=>({body:a.body,created_at:a.created_at,updated_at:a.updated_at,user:a.user.login}));return console.log({comments:k}),JSON.stringify(k)},searchStackOverflow:async({functionCall:a,sendChunk:b,fnNameId:c,controller:d})=>{let f=JSON.parse(a.arguments),{query:g}=f,h=p(f,["query"],"searchStackOverflow",a.arguments);if(d.enqueue({content:" ",display:(0,e.jsx)("div",{id:c,style:{display:"none"}})}),h)return h;let i=(await (0,j.A)(g)).slice(0,3);if(0===i.length)return"No results found.";b({content:JSON.stringify(i,null,2),display:"StackOverflowCards",props:{cards:i.map(a=>({service:a.label,url:a.link}))},...c?{id:c}:{}}),console.log(JSON.stringify(i,null,2));let k=await Promise.all(i.map(a=>(0,j.k)(a.link)));return JSON.stringify(k)},getWorkspaceTree:async({functionCall:a})=>{let b=await (0,f.vE)();return`${JSON.stringify(b)}
    
    *Remember to ALWAYS create a list of files and folders with the correct structure/path starting from the ROOT of the project.*
    *Remember to mantain the same nomenclature as the user for the files and folders names.*
    
    Example: 
    filePaths: [
    "src/app.py",
    "src/services/github.py",
    "src/services/database.py",
    ]
    `},generateFilesAndFolders:async({functionCall:a,sendChunk:b,fnNameId:c,controller:d})=>{let f=JSON.parse(a.arguments),{filePaths:g,nextSteps:h}=f,i=p(f,["filePaths","nextSteps"],"generateFilesAndFolders",a.arguments);return(d.enqueue({content:" ",display:(0,e.jsx)("div",{id:c,style:{display:"none"}})}),i)?i:(g=await Promise.all(g.map(a=>o(a))),console.log({filePaths:g}),b({content:JSON.stringify({filePaths:g,nextSteps:h},null,2),display:"FileTreeWrap",props:{paths:g,bodyOnly:!1},...c?{id:c}:{}}),!1)},getPlanningAgents:async()=>{let a=await (0,i.y)(),b=await fetch(`${a}/api/v1/agents/marketplace?select=id,name,description,image,welcome,slug,tags`,{next:{revalidate:3600}}),c=(await b.json()).filter(a=>!a.tags?.includes("llm")).map(a=>({id:a.id,name:a.name,description:a.description}));return`
    ${JSON.stringify(c,null,2)}
    
    Now you have to list the steps to solve the user's problem (using executePlanningSteps function).
    It can be any number of steps.
    Don't need to repeat the steps to the user.
    
    Example:
    planningSteps: [
      {
        step: 'Generate the SQL connection and query',
        agentName: 'SQL Expert'
        agentId: '6ac6bec1-6eff-48f1-aabc-f5c0310ebf7e'
      },
      {
        step: 'Generate the react frontend',
        agentName: 'React Expert',
        agentId: 'c407d42d-595f-4148-87af-8d02de8fc7b9'
      },
      {
        step: 'Generate the payment gateway',
        agentName: 'Paypal API',
        agentId: 'ec1be541-a758-416a-baa0-1b48f1da862b'
      }
    ]
    
    instructions(string): 
    1. **Generate the SQL connection and query**:
       - Establish a connection to the SQL database.
       - Write and execute the necessary SQL queries to retrieve the required data.
    
    2. **Generate the react frontend**:
       - Set up the React project structure.
       - Create the necessary components and integrate them with the backend.
    
    3. **Generate the payment gateway**:
       - Integrate the Paypal API into the project.
       - Ensure secure handling of payment transactions and proper error handling.
    `},executePlanningSteps:async({functionCall:a,sendChunk:b,fnNameId:c,controller:d})=>{let f=JSON.parse(a.arguments),{planningSteps:g,instructions:h}=f,j=p(f,["planningSteps","instructions"],"executePlanningSteps",a.arguments);if(d.enqueue({content:" ",display:(0,e.jsx)("div",{id:c,style:{display:"none"}})}),j)return j;let k=await (0,i.y)(),l=await fetch(`${k}/agents/marketplace?select=id,name,description,image,welcome,slug,tags`,{next:{revalidate:3600}}),m=(await l.json()).filter(a=>g.some(b=>b.agentId===a.id)),n=g.map(a=>{let b=m.find(b=>b.id===a.agentId);return{...a,image:b?.image}});return console.log({updatedPlanningSteps:n,instructions:h}),b({content:`Steps: ${JSON.stringify(n,null,2)}
      Instructions: ${h}`,display:"PlanningCard",props:{planningSteps:n},...c?{id:c}:{}}),!1},create_file_or_folder:async({functionCall:a,sendChunk:b,internalTools:c,messages:d,controller:f,allContent:g,requestId:i,fnNameId:j,interactionCount:k})=>{let l=JSON.parse(a.arguments),{path:m,type:n,content:o}=l,q=p(l,"file"===n?["path","type","content"]:["path","type"],"create_file_or_folder",a.arguments);if(f.enqueue({content:" ",display:(0,e.jsx)("div",{id:j,style:{display:"none"}})}),q)return q;let r=c.find(a=>"create_file_or_folder"===a.name)?.autoApprove&&(k??0)<h.xk;return f.enqueue({toolRequest:{role:"assistant",content:g,tool_calls:[{id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}]}}),await new Promise(a=>setTimeout(a,1e3)),b({content:" ",display:"LLMToolRequest",props:{name:"create_file_or_folder",args:{path:m,type:n,content:o},toolCallId:a.id,messageIndex:d.length,autoApprove:r,internal:!0,requestId:i,interactionCount:k},...j?{id:j}:{}}),!1},delete_file:async({functionCall:a,sendChunk:b,internalTools:c,messages:d,controller:f,allContent:g,requestId:i,fnNameId:j,interactionCount:k})=>{let l=JSON.parse(a.arguments),{path:m}=l,n=p(l,["path"],"delete_file",a.arguments);if(f.enqueue({content:" ",display:(0,e.jsx)("div",{id:j,style:{display:"none"}})}),n)return n;let o=c.find(a=>"delete_file"===a.name)?.autoApprove&&(k??0)<h.xk;return f.enqueue({toolRequest:{role:"assistant",content:g,tool_calls:[{id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}]}}),await new Promise(a=>setTimeout(a,1e3)),b({content:" ",display:"LLMToolRequest",props:{name:"delete_file",args:{path:m},toolCallId:a.id,messageIndex:d.length,autoApprove:o,internal:!0,requestId:i,interactionCount:k},...j?{id:j}:{}}),!1},edit_file:async({functionCall:a,sendChunk:b,internalTools:c,messages:d,controller:f,allContent:g,requestId:i,fnNameId:j,interactionCount:n})=>{let o,q=JSON.parse(a.arguments),{filePath:r,edits:s}=q,t=q.messages??d,u=p(q,["filePath","edits"],"edit_file",a.arguments);if(f.enqueue({content:" ",display:(0,e.jsx)("div",{id:j,style:{display:"none"}})}),u)return u;let v=c.find(a=>"edit_file"===a.name)?.autoApprove&&(n??0)<h.xk,w={filePath:r,edits:s,messages:t};if(!v)try{let a=await (0,m.S)({filePath:r,edits:s,messages:t??[]});a.ok?(o=(0,k.randomUUID)(),await (0,l.cJ)({sessionId:o,filePath:a.normalizedPath,initialContent:a.currentContent}),await (0,l.Uq)({sessionId:o,content:a.newContent,isPartial:!1}),w.previewSessionId=o):console.warn("[edit_file] Unable to start diff preview:",a.error)}catch(a){o=void 0,console.error("[edit_file] Failed to initiate diff preview session:",a)}return f.enqueue({toolRequest:{role:"assistant",content:g,tool_calls:[{id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}]}}),await new Promise(a=>setTimeout(a,1e3)),b({content:" ",display:"LLMToolRequest",props:{name:"edit_file",args:w,toolCallId:a.id,messageIndex:d.length,autoApprove:v,internal:!0,requestId:i,interactionCount:n,previewSessionId:o},...j?{id:j}:{}}),!1},todo_list:async({functionCall:a,sendChunk:b,internalTools:c,messages:d,controller:f,allContent:g,requestId:i,fnNameId:j,interactionCount:k})=>{let l=JSON.parse(a.arguments),{todos:m}=l,n=p(l,["todos"],"todo_list",a.arguments);if(f.enqueue({content:" ",display:(0,e.jsx)("div",{id:j,style:{display:"none"}})}),n)return n;let o=c.find(a=>"todo_list"===a.name)?.autoApprove&&(k??0)<h.xk;return f.enqueue({toolRequest:{role:"assistant",content:g,tool_calls:[{id:a.id,type:"function",function:{name:a.name,arguments:a.arguments}}]}}),await new Promise(a=>setTimeout(a,1e3)),b({content:" ",display:"LLMToolRequest",props:{name:"todo_list",args:{todos:m},toolCallId:a.id,messageIndex:d.length,autoApprove:o,internal:!0,requestId:i,interactionCount:k},...j?{id:j}:{}}),!1}};d()}catch(a){d(a)}})},96167:(a,b,c)=>{c.d(b,{LLMToolRequestSkeleton:()=>e});var d=c(54177);function e({title:a}){return(0,d.jsx)("details",{className:"group flex h-auto w-full cursor-pointer flex-col rounded-md open:h-auto open:gap-2","data-sentry-component":"LLMToolRequestSkeleton","data-sentry-source-file":"llm-tool-request-skeleton.tsx",children:(0,d.jsx)("summary",{className:"text-muted-foreground flex items-center justify-between gap-2 py-2 transition-all select-none marker:content-none",children:(0,d.jsxs)("div",{className:"flex items-center gap-2",children:[(0,d.jsx)("div",{className:"size-3 animate-spin rounded-full border border-t-neutral-600"}),(0,d.jsx)("p",{className:"text-foreground truncate text-sm",children:a})]})})})}}};
//# sourceMappingURL=7884.js.map