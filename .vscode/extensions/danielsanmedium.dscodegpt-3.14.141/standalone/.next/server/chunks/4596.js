try{let a="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},b=(new a.Error).stack;b&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[b]="d01f9dbc-c5e8-47b5-aa18-929efccee5e4",a._sentryDebugIdIdentifier="sentry-dbid-d01f9dbc-c5e8-47b5-aa18-929efccee5e4")}catch(a){}"use strict";exports.id=4596,exports.ids=[4596],exports.modules={14596:(a,b,c)=>{c.r(b),c.d(b,{fromTokenFile:()=>i,fromWebToken:()=>g});var d=c(13043),e=c(75391),f=c(29021);let g=a=>async b=>{a.logger?.debug("@aws-sdk/credential-provider-web-identity - fromWebToken");let{roleArn:d,roleSessionName:e,webIdentityToken:f,providerId:g,policyArns:h,policy:i,durationSeconds:j}=a,{roleAssumerWithWebIdentity:k}=a;if(!k){let{getDefaultRoleAssumerWithWebIdentity:d}=await Promise.all([c.e(7756),c.e(5784)]).then(c.bind(c,15784));k=d({...a.clientConfig,credentialProviderLogger:a.logger,parentClientConfig:{...b?.callerClientConfig,...a.parentClientConfig}},a.clientPlugins)}return k({RoleArn:d,RoleSessionName:e??`aws-sdk-js-session-${Date.now()}`,WebIdentityToken:f,ProviderId:g,PolicyArns:h,Policy:i,DurationSeconds:j})},h="AWS_WEB_IDENTITY_TOKEN_FILE",i=(a={})=>async()=>{a.logger?.debug("@aws-sdk/credential-provider-web-identity - fromTokenFile");let b=a?.webIdentityTokenFile??process.env[h],c=a?.roleArn??process.env.AWS_ROLE_ARN,i=a?.roleSessionName??process.env.AWS_ROLE_SESSION_NAME;if(!b||!c)throw new e.C("Web identity configuration not specified",{logger:a.logger});let j=await g({...a,webIdentityToken:(0,f.readFileSync)(b,{encoding:"ascii"}),roleArn:c,roleSessionName:i})();return b===process.env[h]&&(0,d.g)(j,"CREDENTIALS_ENV_VARS_STS_WEB_ID_TOKEN","h"),j}}};
//# sourceMappingURL=4596.js.map